//билет 34. работа со стилями и классами js
//Изменение класса является одним из наиболее часто используемых действий в скриптах. Для определения класса используется сво-во className, если мы что-то присваиваем ему, то это заменяет всю строку с классами
//classList - спец. объект с методами для добавления или удаления одного класса. Методы: elem.classList.add/remove("class") - добавить/ удалить класс. toggle - добавить класс, если его нет, инача удалить. contains - проверка наличия класса, возвращает тру или фолс
// Основные методы изменения стиля:
// 1.  element.style: Прямое изменение CSS-свойств элемента.
//element.style.color = "red";
//element.style.fontSize = "20px";
//Плюсы: Просто для быстрых изменений.
//Минусы: Неудобно для сложной стилизации, стили перемешиваются с JS.
//для того чтобы скрыть эл-т моно задать display = "none", а чтобы вернуться к первоночальному состоянию нужно данному сво-ву присвоить пустую строку. Для задания нескольких стилей используют style.csstext. Он не добавляет стили, а заменяет их
//метод getComputedStyle() - результат вызов объект си стилями, похожи на elem.style, но с учетом всех CSS-классов
// Задание 1: Изменение заголовка по клику
// •   Цель: Изменить текст главного заголовка (<h1>) и добавить/удалить класс highlighted при клике на него.
// •   Что нужно сделать:
//     1.  Получить доступ к элементу: Найди элемент <h1> с ID pageTitle с помощью document.getElementById(). Сохрани его в переменную.
//     2.  Добавить обработчик события: Добавь к этому элементу обработчик события click с помощью addEventListener(). Когда пользователь кликнет на заголовок, должна вызываться определенная тобой функция.
//     3.  Внутри обработчика события:
//         *   Изменить текст: Внутри функции-обработчика измени текст заголовка с помощью свойства textContent. Присвой ему новое значение (например, "Заголовок изменен!").
//         *   Добавить/удалить класс: Используй свойство classList и метод toggle() для добавления класса highlighted, если его нет, или удаления, если он уже есть.
//     4.  CSS (Необязательно): Добавь CSS-правила для класса highlighted, чтобы визуально выделить заголовок (например, изменить цвет, добавить тень и т.д.).

const titleElement = document.getElementById("pageTitle");//ищем эл-т

titleElement.addEventListener("click", function() {//добавляем обработчик события
    this.textContent = "Заголовок изменен!";//изминяем текст
    this.classList.toggle("highlighted");  // 3.переключаем класс
});
// Задание 2: Выделение строки таблицы по наведению мыши**
// •   Цель: Изменять цвет фона строки таблицы (<tr>) при наведении мыши и возвращать исходный цвет при уходе мыши.
// •   Что нужно сделать:
//     1.  Получить доступ ко всем строкам таблицы: Найди все строки таблицы (<tr>) внутри элемента <tbody> таблицы с ID productsTable с помощью document.querySelectorAll(). Это вернет коллекцию элементов.
//     2.  Перебрать строки: Используй цикл (например, for или forEach) для перебора каждой строки таблицы.
//     3.  Для каждой строки добавить обработчики событий:
//         *   **mouseover:** Добавь обработчик события mouseover к каждой строке.  При наведении мыши на строку должна вызываться определенная тобой функция. В этой функции нужно добавить класс hovered к строке.
//         *   **mouseout:** Добавь обработчик события mouseout к каждой строке.  При уходе мыши со строки должна вызываться другая определенная тобой функция. В этой функции нужно удалить класс hovered у строки.
//     4.  CSS (Необходимо): Добавь CSS-правила для класса hovered, чтобы изменить цвет фона строки при наведении мыши.

let tr = document.querySelectorAll('tr');

for (let i = 0; i < tr.length; i++) {
    let rez = tr[i];//перебираем строки 

    rez.addEventListener('mouseover', function() {
        rez.classList.add('hovered');
    });//обработчик при наведении мыши

    rez.addEventListener('mouseout', function() {
        rez.classList.remove('hovered');//при убирании мыши
    });
}

// <!-- <!DOCTYPE html>
// <html lang="ru">
// <head>
//     <meta charset="UTF-8">
//     <meta name="viewport" content="width=device-width, initial-scale=1.0">
//     <title>Пример работы с DOM</title>
//     <style>
//         .highlighted {
//             color: #b522ff;
//             text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
//             transition: all 0.3s ease;
//         }
//     </style>
// </head>
// <body>
//     <h1 id="pageTitle">Нажми на меня!</h1>

//     <script src="script34.js"></script>
// </body>
// </html> -->


// <!DOCTYPE html>
// <html lang="ru">
// <head>
//     <meta charset="UTF-8">
//     <meta name="viewport" content="width=device-width, initial-scale=1.0">
//     <title>Выделение строк таблицы</title>
//     <style>
//         table {
//             width: 100%;
//             border-collapse: collapse;
//             margin: 20px 0;
//         }
//         th, td {
//             padding: 12px;
//             text-align: left;
//             border-bottom: 1px solid #ddd;
//         }
//         th {
//             background-color: #f2f2f2;
//         }
//         tr.hovered {
//             background-color: #e6f7ff;
//             transition: background-color 0.3s ease;
//         }
//     </style>
// </head>
// <body>
//     <table id="productsTable">
//         <thead>
//             <tr>
//                 <th>ID</th>
//                 <th>Название</th>
//                 <th>Цена</th>
//             </tr>
//         </thead>
//         <tbody>
//             <tr>
//                 <td>1</td>
//                 <td>Ноутбук</td>
//                 <td>1200$</td>
//             </tr>
//             <tr>
//                 <td>2</td>
//                 <td>Смартфон</td>
//                 <td>800$</td>
//             </tr>
//             <tr>
//                 <td>3</td>
//                 <td>Планшет</td>
//                 <td>500$</td>
//             </tr>
//         </tbody>
//     </table>

//     <script src="script34.js"></script>
// </body>
// </html>