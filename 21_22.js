//билет 21. многомерные массивы
// Представь, что у тебя есть обычный массив - это как список.
//  А многомерный массив - это когда каждый элемент этого списка,сам является списком. Это как таблица, где есть строки и столбцы.
//  В JavaScript многомерный массив – это массив, содержащий в качестве элементов другие массивы. При обращении к эл-ту двумерного массива указывается два индекса - каждый в отдельных квадратных скобках

let chessBoard = [];
for (let i = 0; i < 10; i++) {
  chessBoard[i] = []; // Создаем строку (вложенный массив)
  for (let j = 0; j < 10; j++) {
    chessBoard[i][j] = 2; // Заполняем клетку нулем
  }
}
console.log(chessBoard);

//билет 22.методы forEach(), map(), filter(), reduce()
// 1. forEach() - позволяет запускать функцию для каждого элемента массива 
//структура: forEach(function(item, inddex, array)) {тело метода} item - эл-т массива, index - позиция эл-та, array - используемый массив
// Что делает: Просто перебирает каждый элемент массива и выполняет указанную функцию для каждого элемента. Не создает новый массив и ничего не возвращает (или возвращает undefined).  Используется, когда нужно что-то сделать с каждым элементом, но не нужно создавать новый массив.
// 2. map() - вызываеит функцию для каждого эл-та массива и возвращает массив рез-в выполения этой функции
//структура: map(function(item, index, array) {возвращается новое значение вместо эл-та})
// Что делает: Создает новый массив, применяя указанную функцию к каждому элементу исходного массива. Полезно, когда нужно изменить каждый элемент и получить новый массив с преобразованными значениями.
//3. filter() - метод для фильтрации массива на основе заданного критерия (выборка эл-т, удовлетворяющих заданному условию)
//если true - эл-т добавляется к результату и перебор продолжается, возвращается пустой массив, если ничегт не найдено
//Что делает: Создает новый массив, содержащий только те элементы исходного массива, для которых указанная функция вернула true. Полезно, когда нужно выбрать только определенные элементы, соответствующие условию.
// reduce() - используется для вычисления какого-нибудь единого значения на основе всего массива. Функция применяется по очереди ко всем эл-м массива и переносит свой результат на следующий вызов. При вызове функции результат ее вызова на предыдущем эл0те массива передается как первый аргумент.
//Что делает: Применяет функцию к аккумулятору и каждому элементу массива (слева направо), чтобы свести массив к одному значению. Полезно, когда нужно вычислить сумму, среднее значение, найти максимальное/минимальное значение и т.д.
//Аккумулятор (accumulator) — это значение, которое возвращается функцией после каждого её выполнения.  Аккумулятор используется в методе reduce() для работы с массивами. Этот метод применяет одну и ту же функцию ко всем элементам слева направо, возвращая на каждом этапе результирующее значение.

let age=[1,33,18,4]

function rez(number){
if(number>=18){
  console.log("Возраст",(number+1),"совершенолетний")
}
else{
   console.log("Возраст",(number+1)," не совершенолетний")
}
}
age.forEach(rez)
    


let age=[18,90,23,1]
function ages(number){
return number*2
}
let rez= age.map(ages)
console.log(rez)


let num=[1,2,4,5,6,723,54]
function rez(number){
  return number%2==0
}
let rezzz= num.filter(rez)
console.log(rezzz)
    

let num=[1,54,67,85,4]
function rez(a,b){
  let rezzz = a+b
  return rezzz
}
let reeeez =num.reduce(rez)
console.log(reeeez)





